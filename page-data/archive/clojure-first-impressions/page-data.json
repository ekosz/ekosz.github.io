{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/archive/clojure-first-impressions/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Blog name here"}},"markdownRemark":{"id":"6aa2d6d8-a146-54d3-8ecf-20c4bbd66dc8","excerpt":"First of all, a little background about my experience with Clojure before now.\nThough I have never written in Clojure before, I have programmed functionally…","html":"<p>First of all, a little background about my experience with Clojure before now.\nThough I have never written in Clojure before, I have programmed functionally\nusing Erlang, and have written my own Lisp-like language. That gave me the\nbackground needed so that Clojure shouldn’t have been too much of a culture shock.</p>\n<p>That being said, there was a lot of culture shock. For the past 3 years I have\nbeen a Ruby developer. Though I have played around with many languages, at the\nend of the day Ruby was what put bread on the table. Clojure forced me to\nthink in a much different way than I was used to.</p>\n<p>In OO languages one thinks in terms of Objects. In functional languages one\nthinks in terms of Functions. While this may seem obvious, its important. Data\nis not longer coupled to behavior and all of the helper methods I had become\nused to in Ruby were gone. Enumerables like List and Vector had to be traversed\nmanually. There is no each method anymore.</p>\n<p>Probably the biggest difficulty I had with Clojure was not knowing its\nCore API. There are two parts to every language; grammar and vocabulary. Grammar\nis the syntax of the language, and vocab are its ideas in terms of words. For\nmost programmers, learning the grammar of a new language is the easy part.\nThough languages looks different they all have the basics; variables, conditionals,\nand methods. Learning grammar is just acclimating to a languages flavor of these\nbasics. Vocab on the other hand is hard. Vocab, for the most part, has no\nbasics. Every language is allowed to have as much or as little vocab as it\nlikes. Some languages, like Ruby, have massive standard libraries that\nencapsulate tons of ideas. Clojure on the other hand has a very tiny standard\nlibrary. Ideas in Clojure need to be expressed very precisely. Not knowing the\nvocab makes it very hard to program in.</p>","frontmatter":{"title":"Clojure first impressions","date":"July 23, 2012","description":null}},"previous":{"fields":{"slug":"/archive/tracking-down-slow-code/"},"frontmatter":{"title":"Tracking down slow code"}},"next":{"fields":{"slug":"/archive/code-katas/"},"frontmatter":{"title":"Code katas"}}},"pageContext":{"id":"6aa2d6d8-a146-54d3-8ecf-20c4bbd66dc8","previousPostId":"129d85bc-3b26-5acf-8781-f6cf2b80b14d","nextPostId":"488c81b3-f7be-5eda-989b-feb8a1593b9a"}},
    "staticQueryHashes": ["2841359383","3257411868"]}