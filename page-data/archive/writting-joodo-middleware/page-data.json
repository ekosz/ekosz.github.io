{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/archive/writting-joodo-middleware/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Blog name here"}},"markdownRemark":{"id":"3d03c490-bf34-5ca1-b8f3-68ad13c5c3f0","excerpt":"While working on a Joodo project, I came across the issue of authentication.\nOn a controller by controller basis, we had to redirect users away if they\nweren’t…","html":"<p>While working on a <a href=\"http://www.joodoweb.com/\">Joodo</a> project, I came across the issue of authentication.\nOn a controller by controller basis, we had to redirect users away if they\nweren’t authenticated.</p>\n<p>In Rails the standard way to handle this use case, is to use a before filter,\nwhere the method is defined in the application controller. Joodo doesn’t have\nbefore filters, but what it does have is middleware.</p>\n<p>Joodo middleware takes a handler and returns a function that takes a request\nand does something with it. It can modify the request and pass it on to the\nnext handler, or completely blow the stack and never call the next handler.</p>\n<p>Heres the code I ended up writing as a authentication middleware.</p>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">ns</span> sample.middleware.authentication\n  <span class=\"token punctuation\">(</span><span class=\"token symbol\">:require</span> <span class=\"token punctuation\">[</span>ring.util.response <span class=\"token symbol\">:refer</span> <span class=\"token punctuation\">[</span>redirect<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span>sample.athentication <span class=\"token symbol\">:refer</span> <span class=\"token punctuation\">[</span>is-valid-user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">defn</span> with-valid-user <span class=\"token punctuation\">[</span>handler<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">fn</span> <span class=\"token punctuation\">[</span>request<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is-valid-user</span> request<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">handler</span> request<span class=\"token punctuation\">)</span> <span class=\"token comment\">; pass on request to next middleware</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">redirect</span> <span class=\"token string\">\"/authentication\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now I can use this middleware in my controllers.</p>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">ns</span> sample.user.user-controller\n  <span class=\"token punctuation\">(</span><span class=\"token symbol\">:require</span> <span class=\"token punctuation\">[</span>compojure.core <span class=\"token symbol\">:refer</span> <span class=\"token symbol\">:all</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">[</span>sample.middleware.authentication <span class=\"token symbol\">:refer</span> <span class=\"token punctuation\">[</span>with-valid-user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token function\">defroutes</span> user-controller\n  <span class=\"token punctuation\">(</span><span class=\"token function\">with-valid-user</span>\n    <span class=\"token punctuation\">(</span><span class=\"token function\">context</span> <span class=\"token string\">\"/user\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">POST</span> <span class=\"token string\">\"/\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token function\">create-user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">GET</span> <span class=\"token string\">\"/new\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token function\">new-user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Writing Joodo middleware","date":"September 04, 2012","description":null}},"previous":{"fields":{"slug":"/archive/command-pattern-extraction/"},"frontmatter":{"title":"Command patten extraction"}},"next":{"fields":{"slug":"/archive/flash-messages-in-joodo/"},"frontmatter":{"title":"Flash messages in Joodo"}}},"pageContext":{"id":"3d03c490-bf34-5ca1-b8f3-68ad13c5c3f0","previousPostId":"5c3d92a8-c4ee-5892-a389-2bfa73c2688d","nextPostId":"957f1ec1-178a-5bbe-9ae8-3d81964045d8"}},
    "staticQueryHashes": ["2841359383","3257411868"]}