{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/archive/building-a-blog/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Blog name here"}},"markdownRemark":{"id":"cad0f470-05a7-5de9-a9c7-735fda7b946a","excerpt":"There comes a time in every up and coming web developer’s life that he realizes\nthat he/she needs a blog. And at that time they know that there are plenty of…","html":"<p>There comes a time in every up and coming web developer’s life that he realizes\nthat he/she needs a blog. And at that time they know that there are plenty of\noff the shelf blogging platforms, but in their heart of hearts they know they must build\ntheir own. And so thats what I did.</p>\n<p>I decided to make single web application, mostly inspired by the amazing guys\nover at <a href=\"http://www.9elements.com/\">9Elements</a>. I’ve never really played with\nAJAX heavy applications before and figured this would be an easy place to\nstart. On the backend I have <a href=\"http://www.sinatrarb.com/\">Sinatra</a> listening to HTTP\ncalls, and on requests starting with <code class=\"language-text\">/ajax/</code> it serves up only the meat of the\ndesired page, instead of the whole package. The posts themselves are written in\n<a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a> and stored as plain\nfiles. Sinatra uses <a href=\"http://kramdown.rubyforge.org/\">Kramdown</a> as its markdown\nprocessor, as it is the fastest one to my knowledge.</p>\n<p>I wanted the blog to be as simple as possible, so all of the metadata about the\nposts is stored in the name of the files. For example, the name of this file\nis <code class=\"language-text\">05-12-11-building-a-blog.md</code>. This gives the date for the application to\nsort posts by, as well as the title to display.</p>\n<p>As for 3rd party tools I used for this project, I am using <a href=\"http://jquery.com/\">jQuery</a>,\n<a href=\"http://html5boilerplate.com/\">HTML 5 Boilerplate</a>, and a jQuery plug-in,\n<a href=\"http://code.google.com/p/jquery-appear/\">jQuery-Appear</a> for the automatic\nloading of posts as one scrolls through the index.</p>\n<p>As for the front end, I wanted to reflect my backend ideas about simplicity in\nthe look and feel of the site. I choose to go with a simple color scheme of\nBlack, White, and Light Blue.</p>\n<p>As for the fonts I recently watched the\n<a href=\"http://www.youtube.com/watch?v=QTX1lU97z08\">presentation from Google.io</a> on\nGoogle web fonts. I decided to try out the <a href=\"http://www.google.com/webfonts/preview\">web font previewer</a>\nand was blown away how easy it was to find the <code class=\"language-text\">line-height</code>, <code class=\"language-text\">letter-spacing</code>, and\n<code class=\"language-text\">word-spacing</code> that I wanted. I also found a little trick that came in handy.\nFor fonts that aren’t in Google’s font library, like the font I’m using here,\n<code class=\"language-text\">Helvetica Nue</code>, I still wanted to use the font previewer. So, I used the\ninspector tool to manually change the <code class=\"language-text\">font-family</code> to what ever I wanted to\ntest.</p>\n<p>Finally for the header menu and footer, I took inspiration from <a href=\"http://jashkenas.github.com/coffee-script/\">Coffee Script’s\nWebsite</a>. I really liked the way\none could scroll through a long document without the menu seeming too\nintrusive. I also added a fade-out to the bottom of the page, so that the\nfooter could travel with the page as well.</p>\n<p>For a compleate look at the website internals check it out on <a href=\"https://github.com/ekosz/Personal-Blog\">GitHub</a>,\nand maybe mention a couple things I could have done better.</p>\n<p>Overall I’m really happy with how it turned out. I’m still not the best\ndeveloper, and I’m far from a decent designer, but this is something that\nI wouldn’t mind showing off.</p>","frontmatter":{"title":"Building a blog","date":"May 12, 2011","description":null}},"previous":null,"next":{"fields":{"slug":"/archive/sinatra-vs-rails/"},"frontmatter":{"title":"Sinatra vs Rails"}}},"pageContext":{"id":"cad0f470-05a7-5de9-a9c7-735fda7b946a","previousPostId":null,"nextPostId":"cc3f657e-b4ed-575e-b2c5-58b929fe60e0"}},
    "staticQueryHashes": ["2841359383","3257411868"]}