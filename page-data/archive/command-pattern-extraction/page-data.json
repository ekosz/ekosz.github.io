{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/archive/command-pattern-extraction/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Blog name here"}},"markdownRemark":{"id":"5c3d92a8-c4ee-5892-a389-2bfa73c2688d","excerpt":"In my first iteration of my Limelight interface to mu TTT program I ended up\nputting all of my application logic inside my player classes. Players in\nlimelight…","html":"<p>In my first iteration of my <a href=\"http://limelight.8thlight.com/\">Limelight</a> interface to mu TTT program I ended up\nputting all of my application logic inside my player classes. Players in\nlimelight act as controllers to the GUI.</p>\n<p>Controllers only have one job. Controllers are translators to the GUI. They first\ntranslate events in the GUI into data the application domain can understand.\nThen they translate the result from the domain logic into simple data the GUI\ncan understand.</p>\n<p>Domain logic does not belong in the controller. If it is found there, then it\nneeds to be extracted. One method of extraction is to use the <a href=\"http://en.wikipedia.org/wiki/Command_pattern\">command pattern</a>.</p>\n<p>This is one of the easiest extraction patterns.</p>\n<ol>\n<li>Create a class who’s name is the action we’re extracting.</li>\n<li>Create an execute method inside this class.</li>\n<li>Copy paste the logic we’re extracting from the controller into the execute method.</li>\n<li>Scan through the copied code and turn local variables into instance variables.</li>\n<li>Create a constructor for the class that takes each variable, and sets that instance variable.</li>\n<li>Replace the section of code in the controller with this class.</li>\n<li>Run tests and make sure the code still works.</li>\n<li>Refactor.</li>\n</ol>","frontmatter":{"title":"Command patten extraction","date":"August 29, 2012","description":null}},"previous":{"fields":{"slug":"/archive/saving-parentheses-using-comp/"},"frontmatter":{"title":"Saving parentheses using comp"}},"next":{"fields":{"slug":"/archive/writting-joodo-middleware/"},"frontmatter":{"title":"Writing Joodo middleware"}}},"pageContext":{"id":"5c3d92a8-c4ee-5892-a389-2bfa73c2688d","previousPostId":"2a8d3502-aac2-5124-b885-767a1071d451","nextPostId":"3d03c490-bf34-5ca1-b8f3-68ad13c5c3f0"}},
    "staticQueryHashes": ["2841359383","3257411868"]}