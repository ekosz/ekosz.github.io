{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/archive/screaming-architecture/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Blog name here"}},"markdownRemark":{"id":"99a4ea89-518d-5547-a789-ce8ab8ac005b","excerpt":"When you look rails application you are greeted with a familiar\ndirectory structure. Are given an app/ directory with the folders model/,\nview/, controller/. At…","html":"<p>When you look rails application you are greeted with a familiar\ndirectory structure. Are given an app/ directory with the folders model/,\nview/, controller/. At the time of Rails inception this was considered a big\nwin in terms of convention over configuration. This forced developers to think\nin terms of MVC and develop cleaner code. But over time developers realized\nthat this wasn’t the ideal way to organize code.</p>\n<p>What can we learn about an application from a rails directory? We know its\nMVC, but thats about it. We don’t know what the application does or any of its\nintent. What if it looked something like this?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app/\n  user/\n  bank_account/\n  transfer/</code></pre></div>\n<p>We instantly know this is a banking application that has users and transfers.\nThat is the purpose of scream architecture. Inside each of those folders we\nwould include the models, views, and controllers for that component.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app/\n  user/\n    user.rb\n    user_controller.rb\n    new.html.haml\n  bank_account/\n    bank_account.rb\n    bank_account_controller.rb\n  ...</code></pre></div>\n<p>All of the information we need about a component is located in one location.</p>\n<p>So lets set up Joodo to allow this type of configuration. Joodo with a standard\nMVC layout, that we’ll have to change.</p>\n<p>Lets edit the core.clj file.</p>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\"><span class=\"token punctuation\">(</span><span class=\"token function\">defroutes</span> !-APP_NAME-!-routes\n  <span class=\"token punctuation\">(</span><span class=\"token function\">GET</span> <span class=\"token string\">\"/\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token function\">render-template</span> <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token function\">controller-router</span> '!-APP_NAME-!.controller<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">not-found</span> <span class=\"token punctuation\">(</span><span class=\"token function\">render-template</span> <span class=\"token string\">\"not_found\"</span> <span class=\"token symbol\">:template-root</span>\n      <span class=\"token string\">\"!-DIR_NAME-!/view\"</span> <span class=\"token symbol\">:ns</span> <span class=\"token operator\">`</span>!-APP_NAME-!.view.view-helpers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">def</span> app-handler\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">-></span>\n    !-APP_NAME-!-routes\n      <span class=\"token punctuation\">(</span><span class=\"token function\">wrap-view-context</span> <span class=\"token symbol\">:template-root</span> <span class=\"token string\">\"!-DIR_NAME-!/view\"</span> <span class=\"token symbol\">:ns</span>\n      <span class=\"token operator\">`</span>!-APP_NAME-!.view.view-helpers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The important lines here are the controller-router and wrap-view-context. These\nlines set Joodo looking the controller/ directory for controllers and view/\ndirectory for views. Lets change those lines to be a little more free form.</p>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\"><span class=\"token punctuation\">(</span><span class=\"token function\">defroutes</span> !-APP_NAME-!-routes\n  <span class=\"token punctuation\">(</span><span class=\"token function\">GET</span> <span class=\"token string\">\"/\"</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token function\">render-template</span> <span class=\"token string\">\"view/index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token function\">controller-router</span> '!-APP_NAME-!<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">not-found</span> <span class=\"token punctuation\">(</span><span class=\"token function\">render-template</span> <span class=\"token string\">\"view/not_found\"</span>\n                                  <span class=\"token symbol\">:template-root</span> <span class=\"token string\">\"!-DIR_NAME-!\"</span>\n                                  <span class=\"token symbol\">:layout</span> <span class=\"token string\">\"view/layout\"</span>\n                                  <span class=\"token symbol\">:ns</span> <span class=\"token operator\">`</span>!-APP_NAME-!.view.view-helpers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">def</span> app-handler\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">-></span>\n    !-APP_NAME-!-routes\n      <span class=\"token punctuation\">(</span><span class=\"token function\">wrap-view-context</span> <span class=\"token symbol\">:template-root</span> <span class=\"token string\">\"!-DIR_NAME-!\"</span>\n                         <span class=\"token symbol\">:layout</span> <span class=\"token string\">\"view/layout\"</span>\n                         <span class=\"token symbol\">:ns</span> <span class=\"token operator\">`</span>!-APP_NAME-!.view.view-helpers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here we changed the view-context to point to the app directory and the\ncontroller-router to also point to the route directory. Because of these\nchanges we had to make a couple others to keep the application working the same\nas it was. First off, a :layout option had to be added, as the layout file\nwill no longer be located where the views are stored. Also, global view files\nmust be explicitly told to be located in the view/ directory.</p>\n<p>Finally we can change up the directory structure. All of the models, views,\nand controllers can be put in there own shared folders inside the app\ndirectory. Then the controller/ and model/ folders can be removed. The view/\ndirectory will now only store global views.</p>","frontmatter":{"title":"Screaming architecture","date":"August 21, 2012","description":null}},"previous":{"fields":{"slug":"/archive/intro-to-joodo/"},"frontmatter":{"title":"Introduction to Joodo"}},"next":{"fields":{"slug":"/archive/overriding-functions-in-clojure/"},"frontmatter":{"title":"Overriding functions in Clojure"}}},"pageContext":{"id":"99a4ea89-518d-5547-a789-ce8ab8ac005b","previousPostId":"b13b8957-0492-56e7-8d76-7e4e3f46d808","nextPostId":"c35247d6-ec7f-55a1-9b3a-eed5f6cfcd22"}},
    "staticQueryHashes": ["2841359383","3257411868"]}